buildscript {

    ext {
        springBootVersion = '2.4.5'
    }

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    }
}

def api = project(":redirect-api")
def core = project(":redirect-core")
def multiModules = [api, core]

configure(multiModules) {

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.emart'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'
    compileJava.options.encoding = 'UTF-8'


    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        compileOnly "org.projectlombok:lombok"
        annotationProcessor "org.projectlombok:lombok"

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testCompileOnly "org.projectlombok:lombok"
        testAnnotationProcessor "org.projectlombok:lombok"

        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.security:spring-security-test'
    }

    test {
        useJUnitPlatform()
    }

    clean {
        delete file('src/main/generated') // 인텔리제이 Annotation processor 생성물 생성위치
    }
}


task cleanGeneratedDir(type: Delete) {
    delete file('src/main/generated')
}
