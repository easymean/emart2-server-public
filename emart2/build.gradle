buildscript {
    ext {
        springBootVersion = '2.4.5'
        querydslVersion = '1.0.10'
    }

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:$querydslVersion")
    }
}

def api = project(":redirect-api")
def core = project(":redirect-core")
def multiModules = [core, api]

configure(multiModules) {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'com.ewerk.gradle.plugins.querydsl'

    group = 'com.emart'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'
    compileJava.options.encoding = "UTF-8"

    def querydslDir = "$buildDir/generated/querydsl"
    querydsl {
        library = "com.querydsl:querydsl-apt:4.2.2"
        jpa = true
        querydslSourcesDir = querydslDir
    }

    sourceSets {
        main.java.srcDir querydslDir
    }

    configurations {
        querydsl.extendsFrom compileClassPath
    }

    compileQuerydsl {
        options.annotationProcessorPath = configurations.querydsl
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        compile 'com.querydsl:querydsl-jpa'
        compile 'com.querydsl:querydsl-apt'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'

        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.security:spring-security-test'
    }

    test {
        useJUnitPlatform()
    }
    clean {
        delete file('src/main/generated')
    }
}







